name: Android CI
on:
  pull_request:
    branches: [ master ]
    types:
      - closed
#  push:
#    branches: [ master ]
#    tags:
#      - 'v*'

jobs:
  Build:
    if: (github.event.pull_request.merged == true)
    name: Build/Sign APK
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Grant Permission to Execute Gradle
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > app/keystore.jks

      - name: Build Release apk
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          ./gradlew assembleStageAcmeRelease
          ./gradlew assembleUatAcmeRelease

      - name: List APK files
        id: list_files
        run: |
          FILES=$(find app/build/outputs/apk -type f -name "*.apk" -exec echo {} \; | tr '\n' ',')
          echo "APK files: $FILES"
          echo "::set-output name=files::$FILES"


      - name: Remove keystore file
        run: rm app/keystore.jks

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release-signed
          path: |
            app/build/outputs/apk/stageAcme/release
            app/build/outputs/apk/uatAcme/release

      - name: Print uploaded file names
        run: |
          FILES="${{ steps.list_files.outputs.files }}"
          IFS=',' read -ra FILE_ARRAY <<< "$FILES"
          for file in "\${FILE_ARRAY[@]}"; do
            echo "Uploaded file: $file"
          done
  

  Release:
    if: (github.event.pull_request.merged == true)
    name: Create Release/Upload APK
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: app-release-signed
          path: |
            app/build/outputs/apk


      - name: List downloaded APK files
        run: |
          FILES=$(find app/build/outputs/apk -type f -name "*.apk" -exec echo {} \;)
          for file in $FILES; do
            echo "Downloaded file: $file"
          done


      - name: Expose version name
        uses: michpohl/android-expose-version-name-action@v1.0.0
        with:
          expose-version-name: 'true'
          expose-version-code: 'true'

      - name: Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: false
          prerelease: false
          files: |
            app/build/outputs/apk/uatAcme/release/app-uat-acme-release.apk
            app/build/outputs/apk/uatAcme/release/app-stage-acme-release.apk
          tag_name: ${{ env.ANDROID_VERSION_NAME }}
          name: Release ${{ env.ANDROID_VERSION_NAME }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
